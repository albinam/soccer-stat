{"version":3,"sources":["Images/football.svg","Images/football.png","Components/Header/Header.js","Components/Leagues/Leagues.js","Components/Teams/Teams.js","Components/TeamMatches/TeamMatches.js","Components/LeagueMatches/LeagueMatches.js","Components/Standings/Standings.js","Components/TeamsPage/TeamsPage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","expand","Brand","to","pathname","src","logo","height","width","alt","Toggle","Collapse","id","Nav","Component","Leagues","history","location","useState","leagues","setLeagues","search","URLSearchParams","get","textInput","React","createRef","useEffect","getLeagues","leagueFilter","filter","league","name","toLowerCase","includes","axios","headers","process","dataType","then","response","data","competitions","catch","error","console","log","className","type","placeholder","ref","value","onChange","current","params","set","push","toString","map","l","i","style","padding","margin","maxWidth","maxHeight","color","emblemUrl","area","ensignUrl","image","position","currentSeason","startDate","endDate","leagueId","Teams","url","teams","setTeams","setLeague","seasons","setSeasons","teamInput","useParams","teamSearch","seasonSearch","getTeams","seasonsList","competition","date","substring","selected","teamFilter","team","pushHistory","colorText","FormSelect","e","target","t","crestUrl","href","website","founded","TeamMatches","urlMatches","matches","setMatches","setTeam","teamId","dateFromSearch","dateToSearch","getMatches","textAlign","moment","format","handleOnChange","locale","scope","awayTeam","homeTeam","utcDate","score","winner","fullTime","Matches","match","filtered","dateFrom","dateTo","Standings","standings","setStandings","getStandings","table","playedGames","won","draw","lost","goalsFor","goalsAgainst","goalDifference","TeamsPage","leagueSearch","leaguesList","App","styles","basename","path","exact","component","LeagueMatches","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.996c5920.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/football.c7a35aa4.svg\";","export default __webpack_public_path__ + \"static/media/football.985d3238.png\";","import React, {Component} from 'react';\r\nimport logo from '../../Images/football.png';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {MDBCardText} from \"mdb-react-ui-kit\";\r\n\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <Navbar.Brand>\r\n                    <NavLink to={{pathname: `/leagues`}}></NavLink>\r\n                    <img src={logo}\r\n                         height=\"30\"\r\n                         width=\"30\"\r\n                         alt=\"logo\"\r\n                    />\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav>\r\n                        <NavLink to={{pathname: `/leagues`}}>Leagues</NavLink>\r\n                        <NavLink to={{pathname: `/teams`}}>Teams</NavLink>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBCardImage,\r\n    MDBCardText,\r\n    MDBCardTitle,\r\n    MDBCol, MDBInputGroup, MDBInputGroupText,\r\n    MDBRow\r\n} from 'mdb-react-ui-kit';\r\nimport image from '../../Images/football.svg';\r\nimport {Link} from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\n\r\nconst Leagues = ({history, location}) => {\r\n\r\n    const [leagues, setLeagues] = useState([]);\r\n    let params = new URLSearchParams(location.search);\r\n    let search = params.get('league');\r\n    let textInput = React.createRef();\r\n\r\n    useEffect(() => {\r\n        getLeagues();\r\n    },)\r\n\r\n    const leagueFilter = leagues.filter(league => {\r\n            let filteredLeague\r\n            if (search) {\r\n                filteredLeague = league.name.toLowerCase().includes(search.toLowerCase());\r\n            } else {\r\n                filteredLeague = league;\r\n            }\r\n            return filteredLeague\r\n        }\r\n    )\r\n\r\n    const filter = () => {\r\n        search = textInput.current.value;\r\n        if (search) {\r\n            let params = new URLSearchParams();\r\n            params.set('league', search);\r\n            history.push(`/leagues/?${params.toString()}`);\r\n            return;\r\n        }\r\n        history.push('/leagues');\r\n    }\r\n\r\n    const getLeagues = () => {\r\n        axios.get('https://api.football-data.org/v2/competitions?plan=TIER_ONE', {\r\n            headers: {'X-Auth-Token': process.env.REACT_APP_API_KEY  },\r\n            dataType: 'json'\r\n        })\r\n            .then(response => {\r\n                setLeagues(response.data.competitions);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header></Header>\r\n            <MDBRow>\r\n                <MDBCol className='col-md-4 mx-auto'>\r\n                    <MDBCard className='mb-2'>\r\n                        <MDBCardBody className='d-flex justify-content-between py-2 bg-dark'>\r\n                            <MDBInputGroup className='input-group-sm'>\r\n                                <input type='text' className='form-control form-control-sm rounded'\r\n                                       placeholder='Search'\r\n                                       aria-label='Search'\r\n                                       ref={textInput}\r\n                                       value={search ? search : ''}\r\n                                       onChange={filter}\r\n                                />\r\n                                <MDBInputGroupText className='border-0 bg-dark' id='search-addon'>\r\n                                    <i className='fas fa-search'></i>\r\n                                </MDBInputGroupText>\r\n                            </MDBInputGroup>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <MDBRow className='row-cols-1 row-cols-md-3 g-4'>\r\n                {leagueFilter.map((l, i) =>\r\n                    <MDBCol>\r\n                        <div style={{\r\n                            padding: 10,\r\n                            margin: 10,\r\n                            height: '100%'\r\n                        }}>\r\n                            <MDBCard className='h-100 d-flex bg-dark text-center' style={{\r\n                                maxWidth: '550px',\r\n                                maxHeight: '350px',\r\n                                padding: 10,\r\n                                color: 'white'\r\n                            }}>\r\n                                <MDBCardImage\r\n                                    src={l.emblemUrl ? l.emblemUrl : l.area.ensignUrl || image}\r\n                                    alt={l.name}\r\n                                    position='top'\r\n                                    className='img-thumbnail rounded'\r\n                                    style={{\r\n                                        maxWidth: '150px', maxHeight: '105px', margin: 'auto',\r\n                                        padding: 'auto'\r\n                                    }}\r\n                                />\r\n                                <MDBCardBody>\r\n                                    <MDBCardTitle>{l.name}</MDBCardTitle>\r\n                                    <MDBCardText>{l.area.name}\r\n                                    </MDBCardText>\r\n                                    <MDBCardText>\r\n                                        <i className='fas fa-calendar-week'></i>\r\n                                        {l.currentSeason.startDate} - {l.currentSeason.endDate}\r\n                                    </MDBCardText>\r\n                                    <MDBCardText>\r\n                                        <Link to={{pathname: `/leagues/${l.id}/teams`, leagueId: l.id}}>Teams</Link>\r\n                                    </MDBCardText>\r\n                                    <MDBCardText>\r\n                                        <Link to={{pathname: `/leagues/${l.id}/matches`, leagueId: l.id}}>Matches</Link>\r\n                                    </MDBCardText>\r\n                                    <MDBCardText>\r\n                                        <Link to={{pathname: `/leagues/${l.id}/standings`, leagueId: l.id}}>Standings</Link>\r\n                                    </MDBCardText>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </div>\r\n                    </MDBCol>)}\r\n            </MDBRow>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Leagues;","import React, {useEffect, useState} from 'react';\r\nimport FormSelect from 'react-bootstrap/FormSelect';\r\nimport axios from 'axios';\r\nimport image from '../../Images/football.svg';\r\nimport {\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBCardImage, MDBCardText,\r\n    MDBCardTitle,\r\n    MDBCol,\r\n    MDBInputGroup,\r\n    MDBInputGroupText,\r\n    MDBRow, MDBTypography\r\n} from 'mdb-react-ui-kit';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\n\r\nconst Teams = ({history, location}) => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n    const [league, setLeague] = useState('');\r\n    const [seasons, setSeasons] = useState([]);\r\n    let url;\r\n    let teamInput = React.createRef();\r\n    let params = new URLSearchParams(location.search);\r\n    let leagueId = useParams().leagueId;\r\n    let teamSearch = params.get('team');\r\n    let seasonSearch = params.get('season');\r\n\r\n    useEffect(() => {\r\n        if (seasonSearch) {\r\n            url = `https://api.football-data.org/v2/competitions/${leagueId}/teams?season=${seasonSearch}`;\r\n        } else {\r\n            url = `https://api.football-data.org/v2/competitions/${leagueId}/teams`;\r\n        }\r\n        getTeams();\r\n        seasonsList();\r\n    }, [location])\r\n\r\n    const getTeams = () => {\r\n        axios.get(url, {\r\n            headers: {'X-Auth-Token': process.env.REACT_APP_API_KEY},\r\n            dataType: 'json'\r\n        })\r\n            .then(response => {\r\n                setTeams(response.data.teams);\r\n                setLeague(response.data.competition);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n        axios.get(`https://api.football-data.org/v2/competitions/` + leagueId, {\r\n            headers: {'X-Auth-Token': process.env.REACT_APP_API_KEY},\r\n            dataType: 'json'\r\n        })\r\n            .then(response => {\r\n                setSeasons(response.data.seasons);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const seasonsList = () => {\r\n        return seasons.map(function (date, i) {\r\n            return <option value={date.startDate.substring(0, 4)} key={date.startDate.substring(0, 4)}\r\n                           selected={seasonSearch == date.startDate.substring(0, 4) ? date.startDate.substring(0, 4) : false}>\r\n                {date.startDate}/{date.endDate}\r\n            </option>\r\n        })\r\n    }\r\n\r\n    const teamFilter = teams.filter(team => {\r\n            let filteredTeam\r\n            if (teamSearch) {\r\n                filteredTeam = team.name.toLowerCase().includes(teamSearch.toLowerCase());\r\n            } else {\r\n                filteredTeam = team;\r\n            }\r\n            return filteredTeam\r\n        }\r\n    )\r\n\r\n    const filterTeam = () => {\r\n        teamSearch = teamInput.current.value;\r\n        pushHistory();\r\n    }\r\n\r\n    const filterSeason = (e) => {\r\n        seasonSearch = e.target.value;\r\n        pushHistory();\r\n    }\r\n\r\n    const pushHistory = () => {\r\n        let params = new URLSearchParams();\r\n        if (teamSearch) {\r\n            params.set('team', teamSearch);\r\n        }\r\n        if (seasonSearch) {\r\n            params.set('season', seasonSearch);\r\n        }\r\n        history.push(`/leagues/${leagueId}/teams/?${params.toString()}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header></Header>\r\n            <MDBRow>\r\n                <MDBCol className='col-md-4 mx-auto'>\r\n                    <MDBTypography colorText={'white'} className='text-center'\r\n                                   variant='h3'>{league.name}</MDBTypography>\r\n                    <MDBCard className='mb-2'>\r\n                        <MDBCardBody className='d-flex justify-content-between py-2 bg-dark'>\r\n                            <MDBInputGroup className='input-group-sm'>\r\n                                <input type='text' className='form-control form-control-sm rounded'\r\n                                       placeholder='Search'\r\n                                       aria-label='Search'\r\n                                       ref={teamInput}\r\n                                       value={teamSearch ? teamSearch : ''}\r\n                                       onChange={filterTeam}\r\n                                />\r\n                                <MDBInputGroupText className='border-0 bg-dark' id='search-addon'>\r\n                                    <i className='fas fa-search'></i>\r\n                                </MDBInputGroupText>\r\n                                <FormSelect className='form-select-sm' onChange={filterSeason}>\r\n                                    {seasonsList()}\r\n                                </FormSelect>\r\n                            </MDBInputGroup>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <MDBRow className='row-cols-1 row-cols-md-3 g-4'>\r\n                {teamFilter.map((t, i) =>\r\n                    <MDBCol>\r\n                        <div style={{\r\n                            padding: 10,\r\n                            margin: 10,\r\n                            height: '100%'\r\n                        }}>\r\n                            <MDBCard className='h-100 d-flex bg-dark text-center' style={{\r\n                                maxWidth: '550px',\r\n                                maxHeight: '350px',\r\n                                padding: 10,\r\n                                color: 'white'\r\n                            }}>\r\n                                <MDBCardImage\r\n                                    src={t.crestUrl ? t.crestUrl : image}\r\n                                    alt={t.name}\r\n                                    position='top'\r\n                                    className='img-thumbnail rounded'\r\n                                    style={{\r\n                                        maxWidth: '150px', maxHeight: '105px', margin: 'auto',\r\n                                        padding: 'auto'\r\n                                    }}\r\n                                />\r\n                                <MDBCardBody>\r\n                                    <MDBCardTitle>{t.name}</MDBCardTitle>\r\n                                    <MDBCardText>{t.area.name}\r\n                                    </MDBCardText>\r\n                                    <MDBCardText>\r\n                                        <a href={t.website}>{t.website}</a>\r\n                                    </MDBCardText>\r\n                                    <MDBCardText>\r\n                                        Founded in {t.founded}\r\n                                    </MDBCardText>\r\n                                    <MDBCardText>\r\n                                        <Link to={{pathname: `/teams/${t.id}/matches`}}>Matches</Link>\r\n                                    </MDBCardText>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </div>\r\n                    </MDBCol>)}\r\n            </MDBRow>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Teams;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\r\nimport moment from 'moment';\r\nimport {useParams} from 'react-router-dom';\r\nimport {\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBCol,\r\n    MDBInputGroup,\r\n    MDBRow,\r\n    MDBTable,\r\n    MDBTypography\r\n} from 'mdb-react-ui-kit';\r\nimport Header from '../Header/Header';\r\n\r\n\r\nconst TeamMatches = ({history, location}) => {\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const [team, setTeam] = useState([]);\r\n    let urlMatches;\r\n    let params = new URLSearchParams(location.search);\r\n    let teamId = useParams().teamId;\r\n    let dateFromSearch = params.get('dateFrom');\r\n    let dateToSearch = params.get('dateTo');\r\n\r\n    useEffect(() => {\r\n        if (dateToSearch && dateFromSearch) {\r\n            urlMatches = `https://api.football-data.org/v2/teams/${teamId}/matches?dateFrom=${dateFromSearch}&&dateTo=${dateToSearch}`;\r\n        } else {\r\n            urlMatches = `https://api.football-data.org/v2/teams/${teamId}/matches`;\r\n        }\r\n        getMatches();\r\n    }, [location])\r\n\r\n    const handleOnChange = (value) => {\r\n        if (value) {\r\n            dateFromSearch = moment(value[0]).format('YYYY-MM-DD');\r\n            dateToSearch = moment(value[1]).format('YYYY-MM-DD');\r\n            let params = new URLSearchParams();\r\n            params.set('dateFrom', dateFromSearch);\r\n            params.set('dateTo', dateToSearch);\r\n            history.push(`/teams/${teamId}/matches?${params.toString()}`);\r\n            return;\r\n        }\r\n        history.push(`/teams/${teamId}/matches`);\r\n    }\r\n\r\n    const getMatches = () => {\r\n        axios.get(urlMatches, {\r\n            headers: {'X-Auth-Token': process.env.REACT_APP_API_KEY },\r\n            dataType: 'json'\r\n        })\r\n            .then(response => {\r\n                setMatches(response.data.matches);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n        axios.get('https://api.football-data.org/v2/teams/' + teamId, {\r\n            headers: {'X-Auth-Token': process.env.REACT_APP_API_KEY },\r\n            dataType: 'json'\r\n        })\r\n            .then(response => {\r\n                setTeam(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header></Header>\r\n            <MDBRow>\r\n                <MDBCol className='col-md-3 mx-auto'>\r\n                    <MDBTypography colorText={'white'} className='text-center'\r\n                                   variant='h3'>{team.name}</MDBTypography>\r\n                    <MDBCard className='mb-3'>\r\n                        <MDBCardBody className='d-flex justify-content-between py-2 bg-dark'>\r\n                            <MDBInputGroup className='input-group-sm align-items-stretch'\r\n                                           style={{textAlign: 'center'}}>\r\n                                <div className='mx-auto bg-white'>\r\n                                    <DateRangePicker\r\n                                        onChange={(value) => handleOnChange(value)}\r\n                                        value={[dateFromSearch, dateToSearch]}\r\n                                        format='yyyy-MM-dd'\r\n                                        locale={'en'}\r\n                                    />\r\n                                </div>\r\n                            </MDBInputGroup>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <MDBTable className='table-dark'>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Away team</th>\r\n                    <th>Home team</th>\r\n                    <th>Date</th>\r\n                    <th>Score (fulltime)</th>\r\n                    <th>Winner</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {matches.map((data, i) =>\r\n                    <tr key={i + 1}>\r\n                        <th scope='row'>{i + 1}</th>\r\n                        <td>{data.awayTeam.name}</td>\r\n                        <td>{data.homeTeam.name}</td>\r\n                        <td>{data.utcDate}</td>\r\n                        {(data.score.winner != null) ?\r\n                            < td> {data.score.fullTime.awayTeam} - {data.score.fullTime.homeTeam}</td>\r\n                            : <td>-</td>\r\n                        }\r\n                        {(data.score.winner != null) ?\r\n                            < td> {data.score.winner}</td>\r\n                            : <td>-</td>\r\n                        }\r\n                    </tr>)}\r\n                </tbody>\r\n            </MDBTable>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TeamMatches;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\r\nimport moment from 'moment';\r\nimport {useParams} from 'react-router-dom';\r\nimport {\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBCol,\r\n    MDBInputGroup,\r\n    MDBRow,\r\n    MDBTable,\r\n    MDBTypography\r\n} from 'mdb-react-ui-kit';\r\nimport Header from '../Header/Header';\r\nimport FormSelect from 'react-bootstrap/FormSelect';\r\n\r\n\r\nconst Matches = ({history, location}) => {\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const [league, setLeague] = useState([]);\r\n    const [seasons, setSeasons] = useState([]);\r\n    let urlMatches;\r\n    let params = new URLSearchParams(location.search);\r\n    let leagueId = useParams().leagueId;\r\n    let dateFromSearch = params.get('dateFrom');\r\n    let dateToSearch = params.get('dateTo');\r\n    let seasonSearch = params.get('season');\r\n\r\n    useEffect(() => {\r\n        if (seasonSearch) {\r\n            urlMatches = `https://api.football-data.org/v2/competitions/${leagueId}/matches?season=${seasonSearch}`;\r\n        } else {\r\n            urlMatches = `https://api.football-data.org/v2/competitions/${leagueId}/matches`;\r\n        }\r\n        getMatches();\r\n        seasonsList();\r\n    }, [location])\r\n\r\n    const handleOnChange = (value) => {\r\n        if (value) {\r\n            dateFromSearch = moment(value[0]).format('YYYY-MM-DD');\r\n            dateToSearch = moment(value[1]).format('YYYY-MM-DD');\r\n            pushHistory();\r\n        } else {\r\n            dateFromSearch = 0;\r\n            dateToSearch = 0;\r\n            pushHistory();\r\n        }\r\n    }\r\n\r\n    const filter = matches.filter(match => {\r\n            let filtered\r\n            if (dateFromSearch && dateToSearch) {\r\n                let dateFrom = moment(dateFromSearch).format();\r\n                let dateTo = moment(dateToSearch).format();\r\n                if (match.utcDate >= dateFrom && match.utcDate <= dateTo) {\r\n                    filtered = match;\r\n                }\r\n            } else {\r\n                filtered = match;\r\n            }\r\n            return filtered\r\n        }\r\n    )\r\n\r\n    const pushHistory = () => {\r\n        let params = new URLSearchParams();\r\n        if (dateFromSearch && dateToSearch) {\r\n            params.set('dateFrom', dateFromSearch);\r\n            params.set('dateTo', dateToSearch);\r\n        }\r\n        if (seasonSearch) {\r\n            params.set('season', seasonSearch);\r\n        }\r\n        history.push(`/leagues/${leagueId}/matches?${params.toString()}`);\r\n    }\r\n\r\n    const seasonsList = () => {\r\n        return seasons.map(function (date, i) {\r\n            return <option value={date.startDate.substring(0, 4)} key={date.startDate.substring(0, 4)}\r\n                           selected={seasonSearch == date.startDate.substring(0, 4) ? date.startDate.substring(0, 4) : false}>\r\n                {date.startDate}/{date.endDate}\r\n            </option>\r\n        })\r\n    }\r\n\r\n    const filterSeason = (e) => {\r\n        seasonSearch = e.target.value;\r\n        pushHistory();\r\n    }\r\n\r\n    const getMatches = () => {\r\n        axios.get(urlMatches, {\r\n            headers: {'X-Auth-Token':  process.env.REACT_APP_API_KEY  },\r\n            dataType: 'json'\r\n        })\r\n            .then(response => {\r\n                setMatches(response.data.matches);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n        axios.get('https://api.football-data.org/v2/competitions/' + leagueId, {\r\n            headers: {'X-Auth-Token': process.env.REACT_APP_API_KEY },\r\n            dataType: 'json'\r\n        })\r\n            .then(response => {\r\n                setLeague(response.data);\r\n                setSeasons(response.data.seasons);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header></Header>\r\n            <MDBRow>\r\n                <MDBCol className='col-md-4 mx-auto'>\r\n                    <MDBTypography colorText={'white'} className='text-center'\r\n                                   variant='h3'>{league.name}</MDBTypography>\r\n                    <MDBCard className='mb-2'>\r\n                        <MDBCardBody className='d-flex justify-content-between py-2 bg-dark'>\r\n                            <MDBInputGroup className='input-group-sm align-items-stretch'\r\n                                           style={{textAlign: 'center'}}>\r\n                                <div className='mx-auto bg-white'>\r\n                                    <DateRangePicker\r\n                                        onChange={(value) => handleOnChange(value)}\r\n                                        value={[dateFromSearch, dateToSearch]}\r\n                                        format='yyyy-MM-dd'\r\n                                        locale={'en'}\r\n                                    />\r\n                                </div>\r\n                                <div className='mx-auto bg-white'>\r\n                                    <FormSelect className='form-select-sm' onChange={filterSeason}>\r\n                                        {seasonsList()}\r\n                                    </FormSelect>\r\n                                </div>\r\n                            </MDBInputGroup>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <MDBTable className='table-dark'>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Away team</th>\r\n                    <th>Home team</th>\r\n                    <th>Date</th>\r\n                    <th>Score (fulltime)</th>\r\n                    <th>Winner</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {filter.map((data, i) =>\r\n                    <tr key={i + 1}>\r\n                        <th scope='row'>{i + 1}</th>\r\n                        <td>{data.awayTeam.name}</td>\r\n                        <td>{data.homeTeam.name}</td>\r\n                        <td>{data.utcDate}</td>\r\n                        {(data.score.winner != null) ?\r\n                            < td> {data.score.fullTime.awayTeam} - {data.score.fullTime.homeTeam}</td>\r\n                            : <td>-</td>\r\n                        }\r\n                        {(data.score.winner != null) ?\r\n                            < td> {data.score.winner}</td>\r\n                            : <td>-</td>\r\n                        }\r\n                    </tr>)}\r\n                </tbody>\r\n            </MDBTable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Matches;","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport image from '../../Images/football.svg';\r\nimport {\r\n    MDBCol,\r\n    MDBRow, MDBTable, MDBTypography\r\n} from 'mdb-react-ui-kit';\r\nimport {useParams} from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\n\r\nconst Standings = ({history, location}) => {\r\n\r\n    const [standings, setStandings] = useState([]);\r\n    const [league, setLeague] = useState([]);\r\n    let leagueId = useParams().leagueId;\r\n    ;\r\n\r\n    useEffect(() => {\r\n        getStandings();\r\n    }, [location])\r\n\r\n    const getStandings = () => {\r\n        axios.get(`http://api.football-data.org/v2/competitions/${leagueId}/standings`, {\r\n            headers: {'X-Auth-Token':process.env.REACT_APP_API_KEY },\r\n            dataType: 'json'\r\n        })\r\n            .then(response => {\r\n                setStandings(response.data.standings[0].table);\r\n                setLeague(response.data.competition)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n            <Header></Header>\r\n            <MDBRow>\r\n                <MDBCol className='col-md-4 mx-auto'>\r\n                    <MDBTypography colorText={'white'} className='text-center'\r\n                                   variant='h3'>{league.name}</MDBTypography>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <MDBTable className='table-dark'>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th></th>\r\n                    <th>Team</th>\r\n                    <th>Played</th>\r\n                    <th>Won</th>\r\n                    <th>Draw</th>\r\n                    <th>Lost</th>\r\n                    <th>For</th>\r\n                    <th>Against</th>\r\n                    <th>Difference</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {standings.map((data, i) =>\r\n                    <tr key={i + 1}>\r\n                        <th scope='row'>{i + 1}</th>\r\n                        <td><img src={data.team.crestUrl ? data.team.crestUrl : image} width={'30px'} height={'30px'}/></td>\r\n                        <td>{data.team.name}</td>\r\n                        <td>{data.playedGames}</td>\r\n                        <td>{data.won}</td>\r\n                        <td>{data.draw}</td>\r\n                        <td>{data.lost}</td>\r\n                        <td>{data.goalsFor}</td>\r\n                        <td>{data.goalsAgainst}</td>\r\n                        <td>{data.goalDifference}</td>\r\n                    </tr>)}\r\n                </tbody>\r\n            </MDBTable>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Standings;","import React, {useEffect, useState} from 'react';\r\nimport FormSelect from 'react-bootstrap/FormSelect';\r\nimport axios from 'axios';\r\nimport image from '../../Images/football.svg';\r\nimport {\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBCardImage, MDBCardText,\r\n    MDBCardTitle,\r\n    MDBCol,\r\n    MDBInputGroup,\r\n    MDBInputGroupText,\r\n    MDBRow\r\n} from 'mdb-react-ui-kit';\r\nimport {Link} from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\n\r\nconst TeamsPage = ({history, location}) => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n    const [leagues, setLeagues] = useState('');\r\n    const [seasons, setSeasons] = useState([]);\r\n    let url;\r\n    let teamInput = React.createRef();\r\n    let params = new URLSearchParams(location.search);\r\n    let leagueSearch = params.get('league')\r\n    let seasonSearch = params.get('season');\r\n    let teamSearch = params.get('team');\r\n\r\n    useEffect(() => {\r\n        if (leagueSearch) {\r\n            if (seasonSearch) {\r\n                url = `https://api.football-data.org/v2/competitions/${leagueSearch}/teams?season=${seasonSearch}`;\r\n            } else {\r\n                url = `https://api.football-data.org/v2/competitions/${leagueSearch}/teams`;\r\n            }\r\n        }\r\n        getTeams();\r\n        leaguesList();\r\n        seasonsList();\r\n    }, [location])\r\n\r\n    const getTeams = () => {\r\n        axios.get('https://api.football-data.org/v2/competitions?plan=TIER_ONE', {\r\n            headers: {'X-Auth-Token': process.env.REACT_APP_API_KEY},\r\n            dataType: 'json'\r\n        })\r\n            .then(response => {\r\n                console.log(response)\r\n                setLeagues(response.data.competitions);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n        console.log(leagueSearch)\r\n        if (leagueSearch) {\r\n            axios.get(url, {\r\n                headers: {'X-Auth-Token': process.env.REACT_APP_API_KEY},\r\n                dataType: 'json'\r\n            })\r\n                .then(response => {\r\n                    console.log(response)\r\n                    setTeams(response.data.teams);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                })\r\n            axios.get(`https://api.football-data.org/v2/competitions/` + leagueSearch, {\r\n                headers: {'X-Auth-Token': process.env.REACT_APP_API_KEY},\r\n                dataType: 'json'\r\n            })\r\n                .then(response => {\r\n                    setSeasons(response.data.seasons);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                })\r\n        }\r\n    }\r\n\r\n    const seasonsList = () => {\r\n        if (leagueSearch) {\r\n            return seasons.map(function (date, i) {\r\n                return <option value={date.startDate.substring(0, 4)} key={date.startDate.substring(0, 4)}\r\n                               selected={seasonSearch == date.startDate.substring(0, 4) ? date.startDate.substring(0, 4) : false}>\r\n                    {date.startDate}/{date.endDate}\r\n                </option>\r\n            })\r\n        }\r\n    }\r\n\r\n    const leaguesList = () => {\r\n        if (leagues) {\r\n            return leagues.map(function (league, i) {\r\n                return <option value={league.id} key={league.id}\r\n                               selected={league.id == leagueSearch ? league.id : false}>\r\n                    {league.name}\r\n                </option>\r\n            })\r\n        }\r\n    }\r\n\r\n    const filterSeason = (e) => {\r\n        seasonSearch = e.target.value;\r\n        pushHistory();\r\n    }\r\n\r\n    const filterLeague = (e) => {\r\n        leagueSearch = e.target.value;\r\n        pushHistory();\r\n    }\r\n\r\n    const teamFilter = teams.filter(team => {\r\n            let filteredTeam\r\n            if (teamSearch) {\r\n                filteredTeam = team.name.toLowerCase().includes(teamSearch.toLowerCase());\r\n            } else {\r\n                filteredTeam = team;\r\n            }\r\n            return filteredTeam\r\n        }\r\n    )\r\n\r\n    const filterTeam = () => {\r\n        teamSearch = teamInput.current.value;\r\n        pushHistory();\r\n    }\r\n\r\n    const pushHistory = () => {\r\n        let params = new URLSearchParams();\r\n        if (leagueSearch) {\r\n            params.set('league', leagueSearch);\r\n        }\r\n        if (seasonSearch) {\r\n            params.set('season', seasonSearch);\r\n        }\r\n        if (teamSearch) {\r\n            params.set('team', teamSearch);\r\n        }\r\n        history.push(`/teams/?${params.toString()}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header></Header>\r\n            <MDBRow>\r\n                <MDBCol className='col-md-4 mx-auto'>\r\n                    <MDBCard className='mb-2'>\r\n                        <MDBCardBody className='d-flex justify-content-between py-2 bg-dark'>\r\n                            <MDBInputGroup className='input-group-sm'>\r\n                                <FormSelect className='form-select-sm' onChange={filterLeague}>\r\n                                    {leaguesList()}\r\n                                </FormSelect>\r\n                            </MDBInputGroup>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <MDBRow>\r\n                <MDBCol className='col-md-4 mx-auto'>\r\n                    <MDBCard className='mb-2'>\r\n                        <MDBCardBody className='d-flex justify-content-between py-2 bg-dark'>\r\n                            <MDBInputGroup>\r\n                                <FormSelect className='form-select-sm' onChange={filterSeason}>\r\n                                    {seasonsList()}\r\n                                </FormSelect>\r\n                            </MDBInputGroup>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <MDBRow>\r\n                <MDBCol className='col-md-4 mx-auto'>\r\n                    <MDBCard className='mb-2'>\r\n                        <MDBCardBody className='d-flex justify-content-between py-2 bg-dark'>\r\n                            <MDBInputGroup>\r\n                                <input type='text' className='form-control form-control-sm rounded'\r\n                                       placeholder='Search'\r\n                                       aria-label='Search'\r\n                                       ref={teamInput}\r\n                                       value={teamSearch ? teamSearch : ''}\r\n                                       onChange={filterTeam}\r\n                                />\r\n                                <MDBInputGroupText className='border-0 bg-dark' id='search-addon'>\r\n                                    <i className='fas fa-search'></i>\r\n                                </MDBInputGroupText>\r\n                            </MDBInputGroup>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <MDBRow className='row-cols-1 row-cols-md-3 g-4'>\r\n                {teamFilter.map((t, i) =>\r\n                    <MDBCol>\r\n                        <div style={{\r\n                            padding: 10,\r\n                            margin: 10,\r\n                            height: '100%'\r\n                        }}>\r\n                            <MDBCard className='h-100 d-flex bg-dark text-center' style={{\r\n                                maxWidth: '550px',\r\n                                maxHeight: '350px',\r\n                                padding: 10,\r\n                                color: 'white'\r\n                            }}>\r\n                                <MDBCardImage\r\n                                    src={t.crestUrl ? t.crestUrl : image}\r\n                                    alt={t.name}\r\n                                    position='top'\r\n                                    className='img-thumbnail rounded'\r\n                                    style={{\r\n                                        maxWidth: '150px', maxHeight: '105px', margin: 'auto',\r\n                                        padding: 'auto'\r\n                                    }}\r\n                                />\r\n                                <MDBCardBody>\r\n                                    <MDBCardTitle>{t.name}</MDBCardTitle>\r\n                                    <MDBCardText>{t.area.name}\r\n                                    </MDBCardText>\r\n                                    <MDBCardText>\r\n                                        <a href={t.website}>{t.website}</a>\r\n                                    </MDBCardText>\r\n                                    <MDBCardText>\r\n                                        Founded in {t.founded}\r\n                                    </MDBCardText>\r\n                                    <MDBCardText>\r\n                                        <Link to={{pathname: `/teams/${t.id}/matches`}}>Matches</Link>\r\n                                    </MDBCardText>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </div>\r\n                    </MDBCol>)}\r\n            </MDBRow>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TeamsPage;","import React from \"react\";\r\nimport styles from \"./App.css\";\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport Leagues from \"./Components/Leagues/Leagues\";\r\nimport Teams from \"./Components/Teams/Teams\";\r\nimport TeamMatches from \"./Components/TeamMatches/TeamMatches\";\r\nimport LeagueMatches from \"./Components/LeagueMatches/LeagueMatches\";\r\nimport Standings from \"./Components/Standings/Standings\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport TeamsPage from \"./Components/TeamsPage/TeamsPage\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={styles}>\r\n            <HashRouter basename={process.env.PUBLIC_URL}>\r\n                <Route path='/' exact><Redirect to='/leagues'/>\r\n                </Route>\r\n                <Route path='/leagues' exact component={Leagues}/>\r\n                <Route path='/leagues/:leagueId/teams/:team?' component={Teams}/>\r\n                <Route path='/teams' component={TeamsPage}/>\r\n                <Route path='/teams/:teamId/matches' component={TeamMatches}/>\r\n                <Route path='/leagues/:leagueId/matches' component={LeagueMatches}/>\r\n                <Route path='/leagues/:leagueId/standings' component={Standings}/>\r\n            </HashRouter>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}